{
   // JSHint Default Configuration File (as on JSHint website)
   // See http://jshint.com/docs/ for more details

   "maxerr"       : 50,       // {int} Maximum error before stopping

   // enforcing
   "bitwise"      : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
   "camelcase"    : true,     // true: Identifiers must be in camelCase
   "curly"        : true,     // true: Require {} for every new block or scope
   "eqeqeq"       : true,     // true: Require triple equals (===) for comparison
   "forin"        : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
   "immed"        : true,     // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
   "indent"       : 3,        // {int} Number of spaces to use for indentation
   "latedef"      : false,    // true: Require variables/functions to be defined before being used
   "newcap"       : false,     // true: Require capitalization of all constructor functions e.g. `new F()`
   "noempty"      : true,     // true: Prohibit use of empty blocks
   "undef"        : true,     // true: Require all non-global variables to be declared (prevents global leaks)
   "unused"       : true,     // true: Require all defined variables be used
   "strict"       : true,     // true: Requires all functions run in ES5 Strict Mode
   "trailing"     : true,     // true: Prohibit trailing whitespaces

   // Relaxing
   "asi"          : false,    // true: Tolerate Automatic Semicolon Insertion (no semicolons)
   "es5"          : true,     // true: Allow ES5 syntax (ex: getters and setters)
   "esnext"       : true,     // true: Allow ES.next (ES6) syntax (ex: `const`)
   "moz"          : false,    // true: Allow Mozilla specific syntax (extends and overrides esnext features)
   // (ex: `for each`, multiple try/catch, function expressionâ€¦)
   "evil"         : false,    // true: Tolerate use of `eval` and `new Function()`
   "globalstrict" : true,     // true: Allow global "use strict" (also enables 'strict')
   "lastsemic"    : false,    // true: Tolerate omitting a semicolon for the last statement of a 1-line block
   "laxbreak"     : true,     // true: Tolerate possibly unsafe line breakings
   "laxcomma"     : true,     // true: Tolerate comma-first style coding
   "supernew"     : true,    // true: Allow weird contructions for singletons

   // Legacy
   "nomen"         : false,    // true: Prohibit dangling `_` in variables
   "onevar"        : false,    // true: Allow only one `var` statement per function
   "passfail"      : false,    // true: Stop on first error
   "white"         : false,    // true: Check against strict whitespace and indentation rules

   // Environment
   "jquery"        : true,
   "node"          : true,

   // Custom Globals
   "globals"       : {  // Vanilla JavaScript
      'alert': true,
      'console': true,
      'clearTimeout': true,
      'document': true,
      'module': true,
      'navigator': true,
      'object': true,
      'setTimeout': true, // Probably should use angular's $timeout instead
      'window': true,
      'XDomainRequest': true,
      'XMLHttpRequest': true,

      // React
      'React': true
   }
}